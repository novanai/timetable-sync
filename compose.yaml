services:
  nginx:
    container_name: nginx
    image: nginx:1.27.3
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/templates
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    restart: unless-stopped
    depends_on:
      - redis
      - cns-api
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - REDIS_ADDRESS=${REDIS_ADDRESS}
      - CNS_ADDRESS=${CNS_ADDRESS}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - PORT=${FRONTEND_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  bot:
    container_name: bot
    build:
      context: .
      dockerfile: ./bot/Dockerfile
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - REDIS_ADDRESS=${REDIS_ADDRESS}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - CNS_ADDRESS=${CNS_ADDRESS}

  redis:
    container_name: redis
    image: redis:7.4.1
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:17.2
    restart: unless-stopped
    volumes:
      - ./db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  cns-api:
    container_name: cns-api
    image: ghcr.io/cheeselad/clubsandsocs-api:latest
    restart: unless-stopped
    environment:
      - PORT=${CNS_PORT}

volumes:
  db-data:
